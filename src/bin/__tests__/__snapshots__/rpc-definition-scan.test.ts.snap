// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`scan 1`] = `
"export namespace ScanTestNS {
    type UnwrapPromise<T> = T extends Promise<infer U> ? U : T;

    export interface App {
        User: User;
        User1: User1;
    }

    export interface APIReturnTypes {
        'User.getInfoById1': UnwrapPromise<CUserInfo & IDuplicate>;
        'User.getInfoById2': UnwrapPromise<IUserInfo & { gender: Gender1 }>;
        'User.getInfoById3': UnwrapPromise<TUserInfo>;
        'User.getUnreadMsg': UnwrapPromise<Promise<string[]>>;
        'User1.getInfoById1': UnwrapPromise<CUserInfo & IDuplicate>;
    }

    /**
     * service doc
     */
    interface User {
        /**
         * method doc
         */
        getInfoById1(id: string): CUserInfo & IDuplicate;
        getInfoById2(id: string): IUserInfo & { gender: Gender1 };
        getInfoById3(id: string): TUserInfo;
        getUnreadMsg(id: string): Promise<string[]>;
    }

    /**
     * service doc
     * 验证公共依赖 CUserInfo
     */
    interface User1 {
        /**
         * method doc
         */
        getInfoById1(id: string): CUserInfo & IDuplicate;
    }

    export class CUserInfo {
        name: string;
        age: Date;
        avatar: string;
    }

    export type Gender = Gender1.Male | Gender1.Female;
    export type TUserInfo = CUserInfo & IUserInfo;

    /**
     * 与其他文件中的变量命名冲突，只保留一份，扫描时提供警告
     */
    export interface IDuplicate {
        nothing: string;
    }

    export interface IUserInfo {
        name: string;
        age: Date;
        avatar: string;
        gender: Gender;
    }

    /**
     * 注释：性别
     */
    export enum Gender1 {
        /**
         * 枚举注释
         */
        Male = 'male',
        Female = 'female'
    }
}

export type ScanTest = ScanTestNS.App;
"
`;

exports[`scan 2`] = `
"[
  {
    \\"name\\": \\"User\\",
    \\"path\\": \\"/Users/fenghen/bili-space/ts-rpc/src/bin/__tests__/controller-example.ts\\",
    \\"methods\\": [
      {
        \\"name\\": \\"getInfoById1\\",
        \\"decorators\\": [
          \\"@RPCMethod()\\"
        ],
        \\"retSchema\\": {
          \\"allOf\\": [
            {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"name\\": {
                  \\"type\\": \\"string\\"
                },
                \\"age\\": {
                  \\"type\\": \\"string\\",
                  \\"format\\": \\"date-time\\"
                },
                \\"avatar\\": {
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"age\\",
                \\"avatar\\",
                \\"name\\"
              ]
            },
            {
              \\"description\\": \\"与其他文件中的变量命名冲突，只保留一份，扫描时提供警告\\",
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"nothing\\": {
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"nothing\\"
              ]
            }
          ]
        }
      },
      {
        \\"name\\": \\"getInfoById2\\",
        \\"decorators\\": [
          \\"@RPCMethod()\\"
        ],
        \\"retSchema\\": {
          \\"allOf\\": [
            {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"name\\": {
                  \\"type\\": \\"string\\"
                },
                \\"age\\": {
                  \\"type\\": \\"string\\",
                  \\"format\\": \\"date-time\\"
                },
                \\"avatar\\": {
                  \\"type\\": \\"string\\"
                },
                \\"gender\\": {
                  \\"enum\\": [
                    \\"female\\",
                    \\"male\\"
                  ],
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"age\\",
                \\"avatar\\",
                \\"gender\\",
                \\"name\\"
              ]
            },
            {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"gender\\": {
                  \\"description\\": \\"注释：性别\\",
                  \\"enum\\": [
                    \\"female\\",
                    \\"male\\"
                  ],
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"gender\\"
              ]
            }
          ]
        }
      },
      {
        \\"name\\": \\"getInfoById3\\",
        \\"decorators\\": [
          \\"@RPCMethod()\\"
        ],
        \\"retSchema\\": {
          \\"allOf\\": [
            {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"name\\": {
                  \\"type\\": \\"string\\"
                },
                \\"age\\": {
                  \\"type\\": \\"string\\",
                  \\"format\\": \\"date-time\\"
                },
                \\"avatar\\": {
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"age\\",
                \\"avatar\\",
                \\"name\\"
              ]
            },
            {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"name\\": {
                  \\"type\\": \\"string\\"
                },
                \\"age\\": {
                  \\"type\\": \\"string\\",
                  \\"format\\": \\"date-time\\"
                },
                \\"avatar\\": {
                  \\"type\\": \\"string\\"
                },
                \\"gender\\": {
                  \\"enum\\": [
                    \\"female\\",
                    \\"male\\"
                  ],
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"age\\",
                \\"avatar\\",
                \\"gender\\",
                \\"name\\"
              ]
            }
          ]
        }
      },
      {
        \\"name\\": \\"getUnreadMsg\\",
        \\"decorators\\": [
          \\"@(OtherDecorator())\\",
          \\"@RPCMethod()\\"
        ],
        \\"retSchema\\": {
          \\"type\\": \\"array\\",
          \\"items\\": {
            \\"type\\": \\"string\\"
          }
        }
      }
    ]
  },
  {
    \\"name\\": \\"User1\\",
    \\"path\\": \\"/Users/fenghen/bili-space/ts-rpc/src/bin/__tests__/controller-example1.ts\\",
    \\"methods\\": [
      {
        \\"name\\": \\"getInfoById1\\",
        \\"decorators\\": [
          \\"@RPCMethod()\\"
        ],
        \\"retSchema\\": {
          \\"allOf\\": [
            {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"name\\": {
                  \\"type\\": \\"string\\"
                },
                \\"age\\": {
                  \\"type\\": \\"string\\",
                  \\"format\\": \\"date-time\\"
                },
                \\"avatar\\": {
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"age\\",
                \\"avatar\\",
                \\"name\\"
              ]
            },
            {
              \\"description\\": \\"与其他文件中的变量命名冲突，只保留一份，扫描时提供警告\\",
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"nothing\\": {
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"nothing\\"
              ]
            }
          ]
        }
      }
    ]
  }
]"
`;
